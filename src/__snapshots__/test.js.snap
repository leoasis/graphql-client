// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`basic read and write query 1`] = `
"export function writeQuery(data, cache) {
  let v0, v1;
  return {
    ...cache,
    \\"ROOT_QUERY\\": {
      \\"hero\\": (v0 = data.hero, v1 = v0.__typename + \\":\\" + v0.id, v1)
    },
    [v1]: {
      \\"id\\": v0.id,
      \\"__typename\\": v0.__typename,
      \\"name\\": v0.name
    }
  };
}
export function readQuery(cache) {
  let v0, v1, v2;
  return v0 = cache.ROOT_QUERY, {
    \\"hero\\": (v1 = v0.hero, v2 = cache[v1], {
      \\"id\\": v2.id,
      \\"__typename\\": v2.__typename,
      \\"name\\": v2.name
    })
  };
}"
`;

exports[`more complex read and write query 1`] = `
"export function writeQuery(data, cache) {
  let v0, v1, v2, v3;
  return {
    ...cache,
    \\"ROOT_QUERY\\": {
      \\"hero\\": (v0 = data.hero, v1 = v0.__typename + \\":\\" + v0.id, v1)
    },
    [v1]: {
      \\"__typename\\": v0.__typename,
      \\"id\\": v0.id,
      \\"name\\": v0.name,
      \\"friends\\": (v2 = v0.friends, v2.map(item => item.__typename + \\":\\" + item.id))
    },
    ...v2.reduce((obj, item) => {
      obj[item.__typename + \\":\\" + item.id] = item;
      return obj;
    }, {})
  };
}
export function readQuery(cache) {
  let v0, v1, v2, v3;
  return v0 = cache.ROOT_QUERY, {
    \\"hero\\": (v1 = v0.hero, v2 = cache[v1], {
      \\"__typename\\": v2.__typename,
      \\"id\\": v2.id,
      \\"name\\": v2.name,
      \\"friends\\": (v3 = v2.friends, v3.map(item => cache[item]))
    })
  };
}"
`;
